//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SRM.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class SRMEntities : DbContext
    {
        public SRMEntities()
            : base("name=SRMEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<tbBranch> tbBranches { get; set; }
        public virtual DbSet<tbClass> tbClasses { get; set; }
        public virtual DbSet<tbCommune> tbCommunes { get; set; }
        public virtual DbSet<tbCountry> tbCountries { get; set; }
        public virtual DbSet<tbDistrict> tbDistricts { get; set; }
        public virtual DbSet<tbEmployee> tbEmployees { get; set; }
        public virtual DbSet<tbForm> tbForms { get; set; }
        public virtual DbSet<tbGeneralParameter> tbGeneralParameters { get; set; }
        public virtual DbSet<tbParameterSetting> tbParameterSettings { get; set; }
        public virtual DbSet<tbParent> tbParents { get; set; }
        public virtual DbSet<tbPermission> tbPermissions { get; set; }
        public virtual DbSet<tbPermissionByForm> tbPermissionByForms { get; set; }
        public virtual DbSet<tbPhoto> tbPhotoes { get; set; }
        public virtual DbSet<tbProvince> tbProvinces { get; set; }
        public virtual DbSet<tbStudent> tbStudents { get; set; }
        public virtual DbSet<tbStudentCategory> tbStudentCategories { get; set; }
        public virtual DbSet<tbTeamWork> tbTeamWorks { get; set; }
        public virtual DbSet<tbUser> tbUsers { get; set; }
        public virtual DbSet<tbUserType> tbUserTypes { get; set; }
        public virtual DbSet<tbVillage> tbVillages { get; set; }
        public virtual DbSet<v_EmplyeeList> v_EmplyeeList { get; set; }
        public virtual DbSet<v_GetClassList> v_GetClassList { get; set; }
        public virtual DbSet<v_GetPermissionByFormList> v_GetPermissionByFormList { get; set; }
        public virtual DbSet<v_GetStudentList> v_GetStudentList { get; set; }
        public virtual DbSet<v_GetUserList> v_GetUserList { get; set; }
        public virtual DbSet<v_UserProfile> v_UserProfile { get; set; }
    
        [DbFunction("SRMEntities", "fn_GetAddressTableByVillage")]
        public virtual IQueryable<fn_GetAddressTableByVillage_Result> fn_GetAddressTableByVillage(string vilID)
        {
            var vilIDParameter = vilID != null ?
                new ObjectParameter("vilID", vilID) :
                new ObjectParameter("vilID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_GetAddressTableByVillage_Result>("[SRMEntities].[fn_GetAddressTableByVillage](@vilID)", vilIDParameter);
        }
    
        [DbFunction("SRMEntities", "fn_GetPermissionListByUserId")]
        public virtual IQueryable<fn_GetPermissionListByUserId_Result> fn_GetPermissionListByUserId(Nullable<decimal> uid)
        {
            var uidParameter = uid.HasValue ?
                new ObjectParameter("uid", uid) :
                new ObjectParameter("uid", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_GetPermissionListByUserId_Result>("[SRMEntities].[fn_GetPermissionListByUserId](@uid)", uidParameter);
        }
    }
}
