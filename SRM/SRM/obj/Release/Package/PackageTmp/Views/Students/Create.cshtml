@using SRM.Controllers
@using SRM.Utils
@model SRM.Models.tbStudent

@{
    ViewBag.Title = "Register Student";
}
<style type="text/css">
    /*.col-md-3 {
        width: 60%;
    }

    .col-sm-3 {
        width: 60%;
    }

    .k-textbox {
        width: 100%;
    }

    .k-datepicker {
        width: 100%;
    }

    .control-label {
        width: 25%;
    }*/
    .k-textbox {
        width: 100%;
    }
    .k-dropdown {
        width: 100%;
    }
    .col-md-9 {
        width: 55%;
    }
    .k-datepicker {
        width: 100%;
    }
</style>
@{
    ViewBag.Breadcrumb = new Breadcrumb(new Crumb[] {
        SingletonObject.crumbAdminLte_Index(Url),
        SingletonObject.crumbStudent_Index(Url),
        SingletonObject.crumbStudent_Create(Url)
    });
}
<section class="content-header">
    <h1>
        @ViewBag.Title
        <small>@ViewBag.TitleSmall</small>
    </h1>
    @Html.Partial("_AdminLteBreadcrumb")
    <script type="text/javascript">
        function onCurCommuneSelected(e) {
            try {
                var data = this.dataItem(e.item);
                getDataFromServer(data.Value, '@Url.Action("GetVillageById")', 'CurrenctAddress', 'Village');
            } catch (err) {
                alert(err.description);
            }
        }
        function onCurDistrictSelected(e) {
            try {
                var data = this.dataItem(e.item);
                getDataFromServer(data.Value, '@Url.Action("GetCommuneById")', 'ddlCurCommune', 'Commune');
            } catch (err) {
                alert(err.description);
            }
        }
        function onCurProvinceSelected(e) {
            try {
                var data = this.dataItem(e.item);
                getDataFromServer(data.Value, '@Url.Action("GetDistrictById")', 'ddlCurDistrict', 'District');
            } catch (err) {
                alert(err.description);
            }
        }
        function onCurCountrySelected(e) {
            try {
                var data = this.dataItem(e.item);
                getDataFromServer(data.Value, '@Url.Action("GetProvinceListById")', 'ddlCurProvince', 'Province');
            } catch (err) {
                alert(err.description);
            }
        }
        function onPreCountrySelected(e) {
            try {
                var data = this.dataItem(e.item);
                getDataFromServer(data.Value, '@Url.Action("GetProvinceListById")', 'ddlPreProvince', 'Province');
            } catch (err) {
                alert(err.description);
            }
        }
        function onPreProvinceSelected(e) {
            try {
                var data = this.dataItem(e.item);
                getDataFromServer(data.Value, '@Url.Action("GetDistrictById")', 'ddlPreDistrict', 'District');
            } catch (err) {
                alert(err.description);
            }
        }
        function onPreDistrictSelected(e) {
            try {
                var data = this.dataItem(e.item);
                getDataFromServer(data.Value, '@Url.Action("GetCommuneById")', 'ddlPreCommune', 'Commune');
            } catch (err) {
                alert(err.description);
            }
        }
        function onPreCommuneSelected(e) {
            try {
                var data = this.dataItem(e.item);
                getDataFromServer(data.Value, '@Url.Action("GetVillageById")', 'PreAddress', 'Village');
            } catch (err) {
                alert(err.description);
            }
        }
        function initdll(id) {
            $("#" + id).data("kendoDropDownList").enable(false);
        }

        function checkValidData() {
            return true;
        }

        function onSubmit() {
            if (!checkValidData) return;
            var result = false;
            var _name = document.getElementById('txtFullName').Text;
            var url = '@Url.Action("IsValidData")';
            $.ajax({
                url: url,
                data: { name: _name },
                cache: false,
                type: "POST",
                success: function (data) {
                    result = data;
                },
                error: function (repose) {
                    alert("error : " + repose);
                    result = false;
                }
            });
            //if (!result) alert("Student has exists already");
            return true;
        }
        @{
        var combobox = "100";
    }
    </script>
</section>
<section class="content">
@using (Ajax.BeginForm("Create", "Students", new AjaxOptions
{
    HttpMethod = "POST",
    InsertionMode = InsertionMode.Replace,
    UpdateTargetId = "pMain"
}, new {}))
{
    @Html.AntiForgeryToken()
    <div class="box box-success">
    <div class="box-header with-border">
        <h3 class="box-title">Primary Information</h3>
        <div class="box-tools pull-right">
            <button class="btn btn-box-tool" data-widget="collapse"><i class="fa fa-minus"></i></button>
            <button class="btn btn-box-tool" data-widget="remove"><i class="fa fa-times"></i></button>
        </div>
    </div><!-- /.box-header -->
    <div class="box-body no-padding">
        <div class="row">
            <div class="col-md-12 col-sm-12" style="padding-top: 20px">

            </div>
        </div>
        <div class="form-horizontal">
            <div class="form-group row">
                <div class="col-md-12 col-sm-12">
                    <div class="col-md-6 col-sm-6">
                        @Html.LabelFor(m => m.stdID, "Student ID", htmlAttributes: new {@class = "control-label col-md-3 col-sm-3"})
                        <div class="col-md-9 col-sm-9">
                            @Html.EditorFor(model => model.stdID, new {htmlAttributes = new {@class = "form-control k-textbox", @id = "stdID", @Value = ViewData[ViewDataIndex.DefaultID.ToString()], @disabled = "disabled"}})
                        </div>
                        @Html.ValidationMessageFor(model => model.stdID, "", new {@class = "text-danger col-md-1 col-sm-1"})
                    </div>
                    <div class="col-md-6 col-sm-6">
                        @Html.LabelFor(model => model.Name, "Full Name", htmlAttributes: new {@class = "control-label col-md-3 col-sm-3"})
                        <div class="col-md-9 col-sm-9">
                            @Html.EditorFor(model => model.Name, new {htmlAttributes = new {@class = "form-control k-textbox", @id = "Name"}})
                        </div>
                        @Html.ValidationMessageFor(model => model.Name, "", new {@class = "text-danger"})
                    </div>
                </div>
            </div>
        </div>
        <div class="form-horizontal">
            <div class="form-group row">

            </div>
            <div class="form-group row">
                <div class="col-md-12 col-sm-12">
                    <div class="col-md-6 col-sm-6">
                        @Html.LabelFor(model => model.Gender, "Gender", htmlAttributes: new {@class = "control-label col-md-3 col-sm-3"})
                        <div class="col-md-9 col-sm-9">
                            @(Html.Kendo().DropDownList()
                                  .Name("Gender")
                                  .DataTextField("Text")
                                  .DataValueField("Value")
                                  .BindTo(new List<SelectListItem>()
                                  {
                                      new SelectListItem()
                                      {
                                          Text = "Male",
                                          Value = "M"
                                      },
                                      new SelectListItem()
                                      {
                                          Text = "Female",
                                          Value = "F"
                                      }
                                  })
                                  .OptionLabel("-- Select Gender --")
                                  //.HtmlAttributes(new { style = $@"width: {combobox}%" })
                                  )
                        </div>
                    </div>
                    <div class="col-md-6 col-sm-6">
                        @Html.LabelFor(model => model.ClassID, "Select Class", htmlAttributes: new {@class = "control-label col-md-3 col-sm-3"})
                        <div class="col-md-9 col-sm-9">
                            @(
    Html.Kendo().DropDownListFor(m => m.ClassID)
        .Name("ClassID")
        .DataTextField("Text")
        .DataValueField("Value")
        .BindTo(ViewData["ClassID"] as SelectList)
        .Value("0")
        //.HtmlAttributes(new { style = "width: 100%" })
        .OptionLabel("-- Select Class --")
                                  )
                        </div>
                        @Html.ValidationMessageFor(model => model.ClassID, "", new {@class = "text-danger"})
                    </div>
                </div>
            </div>
            <div class="form-group row">
                <div class="col-md-12 col-sm-12">
                    <div class="col-md-6 col-sm-6">
                        @Html.LabelFor(model => model.DOB, "Date of Birth", htmlAttributes: new {@class = "control-label col-md-3 col-sm-3"})
                        <div class="col-md-9 col-sm-9">
                            @Html.Kendo().DatePickerFor(m => m.DOB).Name("DOB")
                        </div>
                    </div>
                    @Html.ValidationMessageFor(model => model.DOB, "", new {@class = "text-danger"})
                    <div class="col-md-6 col-sm-6">
                        @Html.LabelFor(model => model.catID, "Student Type", htmlAttributes: new {@class = "control-label col-md-3 col-sm-3"})
                        <div class="col-md-9 col-sm-9">
                            @(
    Html.Kendo().DropDownListFor(m => m.catID)
        .Name("catID")
        .DataTextField("Text")
        .DataValueField("Value")
        .BindTo(ViewData["catID"] as SelectList)
        //.HtmlAttributes(new { style = "width: 100%" })
        .OptionLabel("-- Select Type --")
                                  )
                        </div>
                    </div>
                    @Html.ValidationMessageFor(model => model.catID, "", new {@class = "text-danger"})
                </div>
            </div>
            <div class="form-group row">
                <div class="col-md-12 col-sm-12">
                    <div class="col-md-6 col-sm-6">
                        @Html.LabelFor(model => model.Father_name, "Father Name", htmlAttributes: new {@class = "control-label col-md-3 col-sm-3"})
                        <div class="col-md-9 col-sm-9">
                            @Html.EditorFor(model => model.Father_name, new {htmlAttributes = new {@class = "form-control k-textbox", @id = "Father_name"}})
                        </div>
                    </div>
                    @Html.ValidationMessageFor(model => model.Father_name, "", new {@class = "text-danger"})
                    <div class="col-md-6 col-sm-6">
                        @Html.LabelFor(model => model.Mother_name, "Mother Name", htmlAttributes: new {@class = "control-label col-md-3 col-sm-3"})
                        <div class="col-md-9 col-sm-9">
                            @Html.EditorFor(model => model.Mother_name, new {htmlAttributes = new {@class = "form-control k-textbox", @id = "Mother_name"}})
                        </div>
                    </div>
                    @Html.ValidationMessageFor(model => model.Mother_name, "", new {@class = "text-danger"})
                </div>
            </div>
            <div class="box-header with-border">
                <h3 class="box-title">Contact Detail</h3>
            </div><!-- /.box-header -->
        </div>
    </div><!-- /.box-body -->
    <div class="box-body no-padding">
        <div class="row">
            <div class="col-md-12 col-sm-12" style="padding-top: 20px">

            </div>
        </div>
        <div class="form-horizontal">
            <div class="form-group row">
                <div class="col-md-12 col-sm-12">
                    <div class="col-md-6 col-sm-6">
                        @Html.Label("Country", htmlAttributes: new {@class = "control-label col-md-3 col-sm-3"})
                        <div class="col-md-9 col-sm-9">
                            @(
    Html.Kendo().DropDownList().Name("ddlPreCountry")
        .DataTextField("Text")
        .DataValueField("Value")
        .BindTo(ViewData[ViewDataIndex.PreCountry.ToString()] as SelectList)
        .OptionLabel("-- Select Country --")
        .Filter("startswith")
        .SelectedIndex(0)
        //.HtmlAttributes(new { style = "width: 100%" })
        .Events(e => { e.Select("onPreCountrySelected"); })
                                  )
                        </div>
                    </div>
                    <div class="col-md-6 col-sm-6">
                        @Html.Label("Country", htmlAttributes: new {@class = "control-label col-md-3 col-sm-3"})
                        <div class="col-md-9 col-sm-9">
                            @(
    Html.Kendo().DropDownList().Name("ddlCurCountry")
        .DataTextField("Text")
        .DataValueField("Value")
        .BindTo(ViewData[ViewDataIndex.CurCountry.ToString()] as SelectList)
        .OptionLabel("-- Select Country --")
        .Filter("startswith")
        .SelectedIndex(0)
        //.HtmlAttributes(new { style = "width: 100%" })
        .Events(e => { e.Select("onCurCountrySelected"); })
                                  )
                        </div>
                    </div>
                </div>
            </div>
            <div class="form-group row">
                <div class="col-md-12 col-sm-12">
                    <div class="col-md-6 col-sm-6">
                        @Html.Label("Province", htmlAttributes: new {@class = "control-label col-md-3 col-sm-3"})
                        <div class="col-md-9 col-sm-9">
                            @(
    Html.Kendo().DropDownList().Name("ddlPreProvince")
        .DataTextField("Text")
        .DataValueField("Value")
        .BindTo(ViewData[ViewDataIndex.PreProvince.ToString()] as SelectList)
        .OptionLabel("-- Select Province --")
        .Filter("startswith")
        .SelectedIndex(0)
        //.HtmlAttributes(new { style = "width: 100%" })
        .Events(e => { e.Select("onPreProvinceSelected"); })
                                  )
                        </div>
                    </div>
                    <div class="col-md-6 col-sm-6">
                        @Html.Label("Province", htmlAttributes: new {@class = "control-label col-md-3 col-sm-3"})
                        <div class="col-md-9 col-sm-9">
                            @(
    Html.Kendo().DropDownList().Name("ddlCurProvince")
        .DataTextField("Text")
        .DataValueField("Value")
        .BindTo(ViewData[ViewDataIndex.CurProvince.ToString()] as SelectList)
        .OptionLabel("-- Select Province --")
        .Filter("startswith")
        .SelectedIndex(0)
        //.HtmlAttributes(new { style = "width: 100%" })
        .Events(e => { e.Select("onCurProvinceSelected"); })
                                  )
                        </div>
                    </div>
                </div>
            </div>
            <div class="form-group row">
                <div class="col-md-12 col-sm-12">
                    <div class="col-md-6 col-sm-6">
                        @Html.Label("District", htmlAttributes: new {@class = "control-label col-md-3 col-sm-3"})
                        <div class="col-md-9 col-sm-9">
                            @(
    Html.Kendo().DropDownList().Name("ddlPreDistrict")
        .DataTextField("Text")
        .DataValueField("Value")
        .BindTo(ViewData[ViewDataIndex.PreDistrict.ToString()] as SelectList)
        .OptionLabel("-- Select District --")
        .Filter("startswith")
        .SelectedIndex(0)
        //.HtmlAttributes(new { style = "width: 100%" })
        .Events(e => { e.Select("onPreDistrictSelected"); })
                                  )
                        </div>
                    </div>
                    <div class="col-md-6 col-sm-6">
                        @Html.Label("District", htmlAttributes: new {@class = "control-label col-md-3 col-sm-3"})
                        <div class="col-md-9 col-sm-9">
                            @(
    Html.Kendo().DropDownList().Name("ddlCurDistrict")
        .DataTextField("Text")
        .DataValueField("Value")
        .BindTo(ViewData[ViewDataIndex.CurDistrict.ToString()] as SelectList)
        .OptionLabel("-- Select District --")
        .Filter("startswith")
        .SelectedIndex(0)
        //.HtmlAttributes(new { style = "width: 100%" })
        .Events(e => { e.Select("onCurDistrictSelected"); })
                                  )
                        </div>
                    </div>
                </div>
            </div>
            <div class="form-group row">
                <div class="col-md-12 col-sm-12">
                    <div class="col-md-6 col-sm-6">
                        @Html.Label("Commune", htmlAttributes: new {@class = "control-label col-md-3 col-sm-3"})
                        <div class="col-md-9 col-sm-9">
                            @(
    Html.Kendo().DropDownList().Name("ddlPreCommune")
        .DataTextField("Text")
        .DataValueField("Value")
        .BindTo(ViewData[ViewDataIndex.PreCommune.ToString()] as SelectList)
        .OptionLabel("-- Select Commune --")
        .Filter("startswith")
        .SelectedIndex(0)
        //.HtmlAttributes(new { style = "width: 100%" })
        .Events(e => { e.Select("onPreCommuneSelected"); })
                                  )
                        </div>
                    </div>
                    <div class="col-md-6 col-sm-6">
                        @Html.Label("Commune", htmlAttributes: new {@class = "control-label col-md-3 col-sm-3"})
                        <div class="col-md-9 col-sm-9">
                            @(
    Html.Kendo().DropDownList().Name("ddlCurCommune")
        .DataTextField("Text")
        .DataValueField("Value")
        .BindTo(ViewData[ViewDataIndex.CurCommune.ToString()] as SelectList)
        .OptionLabel("-- Select Commune --")
        .Filter("startswith")
        .SelectedIndex(0)
        // .HtmlAttributes(new { style = "width: 100%" })
        .Events(e => { e.Select("onCurCommuneSelected"); })
                                  )
                        </div>
                    </div>
                </div>
            </div>
            <div class="form-group row">
                <div class="col-md-12 col-sm-12">
                    <div class="col-md-6 col-sm-6">
                        @Html.Label("Village", htmlAttributes: new {@class = "control-label col-md-3 col-sm-3"})
                        <div class="col-md-9 col-sm-9">
                            @(
    Html.Kendo().DropDownListFor(m => m.PreAddress)
        .Name("PreAddress")
        .DataTextField("Text")
        .DataValueField("Value")
        .BindTo(ViewData[ViewDataIndex.PreVillage.ToString()] as SelectList)
        .OptionLabel("-- Select Village --")
        .Filter("startswith")
        .SelectedIndex(0)
                                  //.HtmlAttributes(new { style = "width: 100%" })
                                  )
                        </div>
                    </div>
                    <div class="col-md-6 col-sm-6">
                        @Html.Label("Village", htmlAttributes: new {@class = "control-label col-md-3 col-sm-3"})
                        <div class="col-md-9 col-sm-9">
                            @(
    Html.Kendo().DropDownListFor(m => m.CurrenctAddress)
        .Name("CurrenctAddress")
        .DataTextField("Text")
        .DataValueField("Value")
        .BindTo(ViewData[ViewDataIndex.PreVillage.ToString()] as SelectList)
        .OptionLabel("-- Select Village --")
        .Filter("startswith")
        .SelectedIndex(0)
                                  //.HtmlAttributes(new { style = "width: 100%" })
                                  )
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="box-header with-border">
        <h3 class="box-title">Emergency Address</h3>
    </div><!-- /.box-header -->
    <div class="box-body no-padding">
        <div class="row">
            <div class="col-md-12 col-sm-12" style="padding-top: 20px">

            </div>
        </div>
        <div class="form-horizontal">
            <div class="form-group row">
                <div class="col-md-12 col-sm-12">
                    <div class="col-md-6 col-sm-6">
                        @Html.LabelFor(model => model.HouseNo, "House No", htmlAttributes: new {@class = "control-label col-md-3 col-sm-3"})
                        <div class="col-md-9 col-sm-9">
                            @Html.EditorFor(model => model.HouseNo, new {htmlAttributes = new {@class = "form-control k-textbox", @id = "HouseNo"}})
                        </div>
                        @Html.ValidationMessageFor(model => model.HouseNo, "", new {@class = "text-danger"})
                    </div>
                    <div class="col-md-6 col-sm-6">
                        @Html.LabelFor(model => model.ContactPhone, "Contact Phone", htmlAttributes: new {@class = "control-label col-md-3 col-sm-3"})
                        <div class="col-md-9 col-sm-9">
                            @Html.EditorFor(model => model.ContactPhone, new {htmlAttributes = new {@class = "form-control k-textbox", @id = "ContactPhone"}})
                        </div>
                        @Html.ValidationMessageFor(model => model.ContactPhone, "", new {@class = "text-danger"})
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="box-footer">
        <div class="panel-footer">
            @Ajax.ActionLink("Back", "Index", null, SingletonObject._ajaxOption(), new {@class = "btn btn-danger"})
            <input type="submit" id="btnSubmit" value="Create" class="btn btn-success" onclick="return onSubmit();"/>
        </div>
    </div>
    </div><!-- /.box -->
    <script type="text/javascript">
        $(function() {
            initdll('ddlPreDistrict');
            initdll('ddlPreProvince');
            initdll('ddlPreCommune');
            initdll('PreAddress');
            initdll('ddlCurProvince');
            initdll('ddlCurDistrict');
            initdll('ddlCurCommune');
            initdll('CurrenctAddress');
        });

        function onsubmit() {
            
            return false;
        }
    </script>
}
</section>